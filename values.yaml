# Default values for pwa-weather.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 5

# Name for container
containerName: "sayurboxtest3"
healthCheckPath: "/healthcheck"
healthCheckPort: 80

image:
  repository: docker.io/pravarag/pwa-weather-app #https://hub.docker.com/pravarag/pwa-weather-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

deployment:
  # Application listen port
  port: 80
  # Desired replicas for application
  replicaCount: 5

service:
  type: NodePort
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 150m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 80Mi

# Autoscaling behaviour
autoscaling:
  enabled: true
  # Minimum number of pods pods
  minReplicas: 5
  # Maximum number of pods pods
  maxReplicas: 10
  # Target for Horizontal Scaling
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70
  # Pod Budget
  pdbMinAvailable: 2
  # Scaling policy
  metrics:
    - type: Resource
      resource:
        # Scale as per cpu
        name: cpu
        target:
          type: Utilization
          # Scale when average cpu utilization (of current running pods) is greater than 60%
          averageUtilization: 70
    - type: Resource
      resource:
        # Scale as per memory
        name: memory
        target:
          type: Utilization
          # Scale when average memory utilization (of current running pods) is greater than 60%
          averageUtilization: 70

nodeSelector: {}

tolerations: []

poddisruptionbudget: {}

strategy:
  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app-deployment
          operator: In
          values: 
          - "true"
        - key: db-deployment 
          operator: In
          values: 
          - "false"
        - key: monitoring-deployment
          operator: In
          values: 
          - "false"